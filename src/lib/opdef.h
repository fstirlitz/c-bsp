/*         b   , mnemonic          , handler            , opds                                , sems                                                   , flags */
OPCODE_DEF(0x00, "nop"             , op_nop             , BSP_OPDS_NONE                       , BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x01, "return"          , op_return          , BSP_OPDS_NONE                       , BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_STOPS_FLOW | BSP_OPFLAG_POP )
OPCODE_DEF(0x02, "jump"            , op_jump            , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(PTR_CODE , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_STOPS_FLOW | BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x03, "jump"            , op_jump            , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(PTR_CODE , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_STOPS_FLOW | BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x04, "call"            , op_call            , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(PTR_CODE , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_CALL /* | BSP_OPFLAG_STOPS_FLOW */ | BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x05, "call"            , op_call            , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(PTR_CODE , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_CALL /* | BSP_OPFLAG_STOPS_FLOW */ | BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x06, "exit"            , op_exit            , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_STOPS_FLOW )
OPCODE_DEF(0x07, "exit"            , op_exit            , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_STOPS_FLOW )
OPCODE_DEF(0x08, "push"            , op_push            , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x09, "push"            , op_push            , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x0a, "pop"             , op_pop             , BSP_OPDS(WREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_POP )
OPCODE_DEF(0x0b, "length"          , op_length          , BSP_OPDS(WREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x0c, "readbyte"        , op_readbyte        , BSP_OPDS(WREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x0d, "readhalfword"    , op_readhalfword    , BSP_OPDS(WREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x0e, "readword"        , op_readword        , BSP_OPDS(WREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x0f, "pos"             , op_pos             , BSP_OPDS(WREG , NONE , NONE , NONE ), BSP_SEMS(POS      , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_RDPOS )
OPCODE_DEF(0x10, "getbyte"         , op_getbyte         , BSP_OPDS(WREG , IMM32, NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA8 , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x11, "getbyte"         , op_getbyte         , BSP_OPDS(WREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA8 , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x12, "gethalfword"     , op_gethalfword     , BSP_OPDS(WREG , IMM32, NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA16, ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x13, "gethalfword"     , op_gethalfword     , BSP_OPDS(WREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA16, ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x14, "getword"         , op_getword         , BSP_OPDS(WREG , IMM32, NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA32, ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x15, "getword"         , op_getword         , BSP_OPDS(WREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA32, ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x16, "checksha1"       , op_checksha1       , BSP_OPDS(WREG , IMM32, NONE , NONE ), BSP_SEMS(ARITH    , PTR_SHA1  , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x17, "checksha1"       , op_checksha1       , BSP_OPDS(WREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_SHA1  , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x18, "writebyte"       , op_writebyte       , BSP_OPDS(IMM8 , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x19, "writebyte"       , op_writebyte       , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x1a, "writehalfword"   , op_writehalfword   , BSP_OPDS(IMM16, NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x1b, "writehalfword"   , op_writehalfword   , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x1c, "writeword"       , op_writeword       , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x1d, "writeword"       , op_writeword       , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x1e, "truncate"        , op_truncate        , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x1f, "truncate"        , op_truncate        , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x20, "add"             , op_add             , BSP_OPDS(WREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x21, "add"             , op_add             , BSP_OPDS(WREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x22, "add"             , op_add             , BSP_OPDS(WREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x23, "add"             , op_add             , BSP_OPDS(WREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x24, "subtract"        , op_subtract        , BSP_OPDS(WREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x25, "subtract"        , op_subtract        , BSP_OPDS(WREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x26, "subtract"        , op_subtract        , BSP_OPDS(WREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x27, "subtract"        , op_subtract        , BSP_OPDS(WREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x28, "multiply"        , op_multiply        , BSP_OPDS(WREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x29, "multiply"        , op_multiply        , BSP_OPDS(WREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x2a, "multiply"        , op_multiply        , BSP_OPDS(WREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x2b, "multiply"        , op_multiply        , BSP_OPDS(WREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x2c, "divide"          , op_divide          , BSP_OPDS(WREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x2d, "divide"          , op_divide          , BSP_OPDS(WREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x2e, "divide"          , op_divide          , BSP_OPDS(WREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x2f, "divide"          , op_divide          , BSP_OPDS(WREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x30, "remainder"       , op_remainder       , BSP_OPDS(WREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x31, "remainder"       , op_remainder       , BSP_OPDS(WREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x32, "remainder"       , op_remainder       , BSP_OPDS(WREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x33, "remainder"       , op_remainder       , BSP_OPDS(WREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x34, "and"             , op_and             , BSP_OPDS(WREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x35, "and"             , op_and             , BSP_OPDS(WREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x36, "and"             , op_and             , BSP_OPDS(WREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x37, "and"             , op_and             , BSP_OPDS(WREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x38, "or"              , op_or              , BSP_OPDS(WREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x39, "or"              , op_or              , BSP_OPDS(WREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x3a, "or"              , op_or              , BSP_OPDS(WREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x3b, "or"              , op_or              , BSP_OPDS(WREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x3c, "xor"             , op_xor             , BSP_OPDS(WREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x3d, "xor"             , op_xor             , BSP_OPDS(WREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x3e, "xor"             , op_xor             , BSP_OPDS(WREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x3f, "xor"             , op_xor             , BSP_OPDS(WREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x40, "iflt"            , op_iflt            , BSP_OPDS(RREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x41, "iflt"            , op_iflt            , BSP_OPDS(RREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x42, "iflt"            , op_iflt            , BSP_OPDS(RREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x43, "iflt"            , op_iflt            , BSP_OPDS(RREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x44, "ifle"            , op_ifle            , BSP_OPDS(RREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x45, "ifle"            , op_ifle            , BSP_OPDS(RREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x46, "ifle"            , op_ifle            , BSP_OPDS(RREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x47, "ifle"            , op_ifle            , BSP_OPDS(RREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x48, "ifgt"            , op_ifgt            , BSP_OPDS(RREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x49, "ifgt"            , op_ifgt            , BSP_OPDS(RREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x4a, "ifgt"            , op_ifgt            , BSP_OPDS(RREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x4b, "ifgt"            , op_ifgt            , BSP_OPDS(RREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x4c, "ifge"            , op_ifge            , BSP_OPDS(RREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x4d, "ifge"            , op_ifge            , BSP_OPDS(RREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x4e, "ifge"            , op_ifge            , BSP_OPDS(RREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x4f, "ifge"            , op_ifge            , BSP_OPDS(RREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x50, "ifeq"            , op_ifeq            , BSP_OPDS(RREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x51, "ifeq"            , op_ifeq            , BSP_OPDS(RREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x52, "ifeq"            , op_ifeq            , BSP_OPDS(RREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x53, "ifeq"            , op_ifeq            , BSP_OPDS(RREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x54, "ifne"            , op_ifne            , BSP_OPDS(RREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x55, "ifne"            , op_ifne            , BSP_OPDS(RREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x56, "ifne"            , op_ifne            , BSP_OPDS(RREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x57, "ifne"            , op_ifne            , BSP_OPDS(RREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , ARITH     , PTR_CODE  , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x58, "jumpz"           , op_jumpz           , BSP_OPDS(RREG , IMM32, NONE , NONE ), BSP_SEMS(COND     , PTR_CODE  , ARITH     , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x59, "jumpz"           , op_jumpz           , BSP_OPDS(RREG , RREG , NONE , NONE ), BSP_SEMS(COND     , PTR_CODE  , ARITH     , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x5a, "jumpnz"          , op_jumpnz          , BSP_OPDS(RREG , IMM32, NONE , NONE ), BSP_SEMS(COND     , PTR_CODE  , ARITH     , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x5b, "jumpnz"          , op_jumpnz          , BSP_OPDS(RREG , RREG , NONE , NONE ), BSP_SEMS(COND     , PTR_CODE  , ARITH     , ARITH    ) , BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x5c, "callz"           , op_callz           , BSP_OPDS(RREG , IMM32, NONE , NONE ), BSP_SEMS(COND     , PTR_CODE  , ARITH     , ARITH    ) , BSP_OPFLAG_CALL | BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x5d, "callz"           , op_callz           , BSP_OPDS(RREG , RREG , NONE , NONE ), BSP_SEMS(COND     , PTR_CODE  , ARITH     , ARITH    ) , BSP_OPFLAG_CALL | BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x5e, "callnz"          , op_callnz          , BSP_OPDS(RREG , IMM32, NONE , NONE ), BSP_SEMS(COND     , PTR_CODE  , ARITH     , ARITH    ) , BSP_OPFLAG_CALL | BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x5f, "callnz"          , op_callnz          , BSP_OPDS(RREG , RREG , NONE , NONE ), BSP_SEMS(COND     , PTR_CODE  , ARITH     , ARITH    ) , BSP_OPFLAG_CALL | BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x60, "seek"            , op_seek            , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x61, "seek"            , op_seek            , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x62, "seekfwd"         , op_seekfwd         , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_RDPOS | BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x63, "seekfwd"         , op_seekfwd         , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_RDPOS | BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x64, "seekback"        , op_seekback        , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_RDPOS | BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x65, "seekback"        , op_seekback        , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_RDPOS | BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x66, "seekend"         , op_seekend         , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x67, "seekend"         , op_seekend         , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x68, "print"           , op_print           , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(PTR_STR  , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x69, "print"           , op_print           , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(PTR_STR  , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x6a, "menu"            , op_menu            , BSP_OPDS(WREG , IMM32, NONE , NONE ), BSP_SEMS(ARITH    , PTR_MENU  , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x6b, "menu"            , op_menu            , BSP_OPDS(WREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_MENU  , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x6c, "xordata"         , op_xordata         , BSP_OPDS(IMM32, IMM32, NONE , NONE ), BSP_SEMS(PTR_DATA , LENGTH    , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x6d, "xordata"         , op_xordata         , BSP_OPDS(IMM32, RREG , NONE , NONE ), BSP_SEMS(PTR_DATA , LENGTH    , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x6e, "xordata"         , op_xordata         , BSP_OPDS(RREG , IMM32, NONE , NONE ), BSP_SEMS(PTR_DATA , LENGTH    , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x6f, "xordata"         , op_xordata         , BSP_OPDS(RREG , RREG , NONE , NONE ), BSP_SEMS(PTR_DATA , LENGTH    , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x70, "fillbyte"        , op_fillbyte        , BSP_OPDS(IMM32, IMM8 , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x71, "fillbyte"        , op_fillbyte        , BSP_OPDS(IMM32, RREG , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x72, "fillbyte"        , op_fillbyte        , BSP_OPDS(RREG , IMM8 , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x73, "fillbyte"        , op_fillbyte        , BSP_OPDS(RREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x74, "fillhalfword"    , op_fillhalfword    , BSP_OPDS(IMM32, IMM16, NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x75, "fillhalfword"    , op_fillhalfword    , BSP_OPDS(IMM32, RREG , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x76, "fillhalfword"    , op_fillhalfword    , BSP_OPDS(RREG , IMM16, NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x77, "fillhalfword"    , op_fillhalfword    , BSP_OPDS(RREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x78, "fillword"        , op_fillword        , BSP_OPDS(IMM32, IMM32, NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x79, "fillword"        , op_fillword        , BSP_OPDS(IMM32, RREG , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x7a, "fillword"        , op_fillword        , BSP_OPDS(RREG , IMM32, NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x7b, "fillword"        , op_fillword        , BSP_OPDS(RREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x7c, "writedata"       , op_writedata       , BSP_OPDS(IMM32, IMM32, NONE , NONE ), BSP_SEMS(PTR_DATA , LENGTH    , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x7d, "writedata"       , op_writedata       , BSP_OPDS(IMM32, RREG , NONE , NONE ), BSP_SEMS(PTR_DATA , LENGTH    , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x7e, "writedata"       , op_writedata       , BSP_OPDS(RREG , IMM32, NONE , NONE ), BSP_SEMS(PTR_DATA , LENGTH    , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x7f, "writedata"       , op_writedata       , BSP_OPDS(RREG , RREG , NONE , NONE ), BSP_SEMS(PTR_DATA , LENGTH    , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS )
OPCODE_DEF(0x80, "lockpos"         , op_lockpos         , BSP_OPDS_NONE                       , BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x81, "unlockpos"       , op_unlockpos       , BSP_OPDS_NONE                       , BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x82, "truncatepos"     , op_truncatepos     , BSP_OPDS_NONE                       , BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_RDPOS )
OPCODE_DEF(0x83, "jumptable"       , op_jumptable       , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(JUMPIND  , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_STOPS_FLOW | BSP_OPFLAG_JUMP_TABLE | BSP_OPFLAG_TIGHT_LOOP )
OPCODE_DEF(0x84, "set"             , op_set             , BSP_OPDS(WREG , IMM32, NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x85, "set"             , op_set             , BSP_OPDS(WREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x86, "ipspatch"        , op_ipspatch        , BSP_OPDS(WREG , IMM32, NONE , NONE ), BSP_SEMS(ARITH    , PTR_IPS   , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x87, "ipspatch"        , op_ipspatch        , BSP_OPDS(WREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_IPS   , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x88, "stackwrite"      , op_stackwrite      , BSP_OPDS(IMM32, IMM32, NONE , NONE ), BSP_SEMS(STACKW   , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x89, "stackwrite"      , op_stackwrite      , BSP_OPDS(IMM32, RREG , NONE , NONE ), BSP_SEMS(STACKW   , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x8a, "stackwrite"      , op_stackwrite      , BSP_OPDS(RREG , IMM32, NONE , NONE ), BSP_SEMS(STACKW   , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x8b, "stackwrite"      , op_stackwrite      , BSP_OPDS(RREG , RREG , NONE , NONE ), BSP_SEMS(STACKW   , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x8c, "stackread"       , op_stackread       , BSP_OPDS(WREG , IMM32, NONE , NONE ), BSP_SEMS(ARITH    , STACKR    , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x8d, "stackread"       , op_stackread       , BSP_OPDS(WREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , STACKR    , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x8e, "stackshift"      , op_stackshift      , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(STACK    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x8f, "stackshift"      , op_stackshift      , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(STACK    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x90, "retz"            , op_retz            , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(COND     , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_POP )
OPCODE_DEF(0x91, "retnz"           , op_retnz           , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(COND     , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_POP )
OPCODE_DEF(0x92, "pushpos"         , op_pushpos         , BSP_OPDS_NONE                       , BSP_SEMS(POS      , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_RDPOS )
OPCODE_DEF(0x93, "poppos"          , op_poppos          , BSP_OPDS_NONE                       , BSP_SEMS(POS      , ARITH     , ARITH     , ARITH    ) , BSP_OPFLAG_WRPOS | BSP_OPFLAG_POP )
OPCODE_DEF(0x94, "bsppatch"        , op_bsppatch        , BSP_OPDS(WREG , IMM32, IMM32, NONE ), BSP_SEMS(ARITH    , PTR_BSP   , LENGTH    , ARITH    ) , 0 )
OPCODE_DEF(0x95, "bsppatch"        , op_bsppatch        , BSP_OPDS(WREG , IMM32, RREG , NONE ), BSP_SEMS(ARITH    , PTR_BSP   , LENGTH    , ARITH    ) , 0 )
OPCODE_DEF(0x96, "bsppatch"        , op_bsppatch        , BSP_OPDS(WREG , RREG , IMM32, NONE ), BSP_SEMS(ARITH    , PTR_BSP   , LENGTH    , ARITH    ) , 0 )
OPCODE_DEF(0x97, "bsppatch"        , op_bsppatch        , BSP_OPDS(WREG , RREG , RREG , NONE ), BSP_SEMS(ARITH    , PTR_BSP   , LENGTH    , ARITH    ) , 0 )
OPCODE_DEF(0x98, "getbyteinc"      , op_getbyteinc      , BSP_OPDS(WREG , MREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA8 , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x99, "gethalfwordinc"  , op_gethalfwordinc  , BSP_OPDS(WREG , MREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA16, ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x9a, "getwordinc"      , op_getwordinc      , BSP_OPDS(WREG , MREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA32, ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x9b, "increment"       , op_increment       , BSP_OPDS(MREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x9c, "getbytedec"      , op_getbytedec      , BSP_OPDS(WREG , MREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA8 , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x9d, "gethalfworddec"  , op_gethalfworddec  , BSP_OPDS(WREG , MREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA16, ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x9e, "getworddec"      , op_getworddec      , BSP_OPDS(WREG , MREG , NONE , NONE ), BSP_SEMS(ARITH    , PTR_DATA32, ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0x9f, "decrement"       , op_decrement       , BSP_OPDS(MREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xa0, "bufstring"       , op_bufstring       , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(PTR_STR  , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xa1, "bufstring"       , op_bufstring       , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(PTR_STR  , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xa2, "bufchar"         , op_bufchar         , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(USV      , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xa3, "bufchar"         , op_bufchar         , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(USV      , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xa4, "bufnumber"       , op_bufnumber       , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xa5, "bufnumber"       , op_bufnumber       , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xa6, "printbuf"        , op_printbuf        , BSP_OPDS_NONE                       , BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xa7, "clearbuf"        , op_clearbuf        , BSP_OPDS_NONE                       , BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xa8, "setstacksize"    , op_setstacksize    , BSP_OPDS(IMM32, NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xa9, "setstacksize"    , op_setstacksize    , BSP_OPDS(RREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xaa, "getstacksize"    , op_getstacksize    , BSP_OPDS(WREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xab, NULL              , op_bit_shift       , BSP_OPDS_SHIFT                      , BSP_SEMS(ARITH    , ARITH     , SHIFT     , ARITH    ) , 0 )
OPCODE_DEF(0xac, "getfilebyte"     , op_getfilebyte     , BSP_OPDS(WREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xad, "getfilehalfword" , op_getfilehalfword , BSP_OPDS(WREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xae, "getfileword"     , op_getfileword     , BSP_OPDS(WREG , NONE , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xaf, "getvariable"     , op_getvariable     , BSP_OPDS(WREG , RREG , NONE , NONE ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xb0, "addcarry"        , op_addcarry        , BSP_OPDS(WREG , MREG , IMM32, IMM32), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xb1, "addcarry"        , op_addcarry        , BSP_OPDS(WREG , MREG , IMM32, RREG ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xb2, "addcarry"        , op_addcarry        , BSP_OPDS(WREG , MREG , RREG , IMM32), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xb3, "addcarry"        , op_addcarry        , BSP_OPDS(WREG , MREG , RREG , RREG ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xb4, "subborrow"       , op_subborrow       , BSP_OPDS(WREG , MREG , IMM32, IMM32), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xb5, "subborrow"       , op_subborrow       , BSP_OPDS(WREG , MREG , IMM32, RREG ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xb6, "subborrow"       , op_subborrow       , BSP_OPDS(WREG , MREG , RREG , IMM32), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xb7, "subborrow"       , op_subborrow       , BSP_OPDS(WREG , MREG , RREG , RREG ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xb8, "longmul"         , op_longmul         , BSP_OPDS(WREG , WREG , IMM32, IMM32), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xb9, "longmul"         , op_longmul         , BSP_OPDS(WREG , WREG , IMM32, RREG ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xba, "longmul"         , op_longmul         , BSP_OPDS(WREG , WREG , RREG , IMM32), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xbb, "longmul"         , op_longmul         , BSP_OPDS(WREG , WREG , RREG , RREG ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xbc, "longmulacum"     , op_longmulacum     , BSP_OPDS(MREG , MREG , IMM32, IMM32), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xbd, "longmulacum"     , op_longmulacum     , BSP_OPDS(MREG , MREG , IMM32, RREG ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xbe, "longmulacum"     , op_longmulacum     , BSP_OPDS(MREG , MREG , RREG , IMM32), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
OPCODE_DEF(0xbf, "longmulacum"     , op_longmulacum     , BSP_OPDS(MREG , MREG , RREG , RREG ), BSP_SEMS(ARITH    , ARITH     , ARITH     , ARITH    ) , 0 )
